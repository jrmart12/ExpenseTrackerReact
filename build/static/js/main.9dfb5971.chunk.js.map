{"version":3,"sources":["assets/loading.svg","assets/logo.svg","assets/Image1.svg","components/Loading.js","auth0.js","components/NavBar.js","components/Footer.js","components/Description.js","components/ExpenseTracker.js","components/Balance.js","components/IncomeExpenses.js","components/HistoryList.js","components/NewTransaction.js","context/AppReducer.js","context/GlobalState.js","views/Home.js","utils/history.js","utils/initFontAwesome.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Loading","className","src","loading","alt","DEFAULT_REDIRECT_CALLBACK","window","history","replaceState","document","title","location","pathname","Auth0Context","React","createContext","useAuth0","useContext","Auth0Provider","children","onRedirectCallback","initOptions","useState","isAuthenticated","setIsAuthenticated","user","setUser","auth0Client","setAuth0","setLoading","popupOpen","setPopupOpen","useEffect","a","createAuth0Client","auth0FromHook","search","includes","handleRedirectCallback","appState","getUser","initAuth0","loginWithPopup","params","console","error","Provider","value","getIdTokenClaims","loginWithRedirect","getTokenSilently","getTokenWithPopup","logout","NavBar","isOpen","setIsOpen","logoutWithRedirect","returnTo","origin","Navbar","color","light","expand","Container","NavbarBrand","NavbarToggler","onClick","Collapse","navbar","Nav","NavItem","NavLink","tag","RouterNavLink","to","exact","activeClassName","Button","id","UncontrolledDropdown","nav","inNavbar","DropdownToggle","caret","picture","width","DropdownMenu","DropdownItem","header","name","icon","block","style","minHeight","Footer","Description","logo","image1","opacity","ExpenseTracker","Component","Balance","IncomeExpenses","class","HistoryList","NewTransaction","text","setText","amount","setAmount","htmlFor","type","onChange","e","target","placeholder","state","action","initialState","transactions","GlobalProvider","useReducer","AppReducer","Home","createBrowserHistory","library","add","faLink","faUser","faPowerOff","initFontAwesome","App","path","component","Boolean","hostname","match","ReactDOM","render","domain","config","client_id","clientId","redirect_uri","push","targetUrl","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9dfb5971.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/loading.9adab85e.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.5cbb5a93.svg\";","module.exports = __webpack_public_path__ + \"static/media/Image1.5385f716.svg\";","import React from \"react\";\nimport loading from \"../assets/loading.svg\";\n\nconst Loading = () => (\n  <div className=\"spinner\">\n    <img src={loading} alt=\"Loading\" />\n  </div>\n);\n\nexport default Loading;\n","import React, { useState, useEffect, useContext } from \"react\";\nimport createAuth0Client from \"@auth0/auth0-spa-js\";\n\nconst DEFAULT_REDIRECT_CALLBACK = () =>\n  window.history.replaceState({}, document.title, window.location.pathname);\n\nexport const Auth0Context = React.createContext();\nexport const useAuth0 = () => useContext(Auth0Context);\nexport const Auth0Provider = ({\n  children,\n  onRedirectCallback = DEFAULT_REDIRECT_CALLBACK,\n  ...initOptions\n}) => {\n  const [isAuthenticated, setIsAuthenticated] = useState();\n  const [user, setUser] = useState();\n  const [auth0Client, setAuth0] = useState();\n  const [loading, setLoading] = useState(true);\n  const [popupOpen, setPopupOpen] = useState(false);\n\n  useEffect(() => {\n    const initAuth0 = async () => {\n      const auth0FromHook = await createAuth0Client(initOptions);\n      setAuth0(auth0FromHook);\n\n      if (\n        window.location.search.includes(\"code=\") &&\n        window.location.search.includes(\"state=\")\n      ) {\n        const { appState } = await auth0FromHook.handleRedirectCallback();\n        onRedirectCallback(appState);\n      }\n\n      const isAuthenticated = await auth0FromHook.isAuthenticated();\n\n      setIsAuthenticated(isAuthenticated);\n\n      if (isAuthenticated) {\n        const user = await auth0FromHook.getUser();\n        setUser(user);\n      }\n\n      setLoading(false);\n    };\n    initAuth0();\n    // eslint-disable-next-line\n  }, []);\n\n  const loginWithPopup = async (params = {}) => {\n    setPopupOpen(true);\n    try {\n      await auth0Client.loginWithPopup(params);\n    } catch (error) {\n      console.error(error);\n    } finally {\n      setPopupOpen(false);\n    }\n    const user = await auth0Client.getUser();\n    setUser(user);\n    setIsAuthenticated(true);\n  };\n\n  const handleRedirectCallback = async () => {\n    setLoading(true);\n    await auth0Client.handleRedirectCallback();\n    const user = await auth0Client.getUser();\n    setLoading(false);\n    setIsAuthenticated(true);\n    setUser(user);\n  };\n  return (\n    <Auth0Context.Provider\n      value={{\n        isAuthenticated,\n        user,\n        loading,\n        popupOpen,\n        loginWithPopup,\n        handleRedirectCallback,\n        getIdTokenClaims: (...p) => auth0Client.getIdTokenClaims(...p),\n        loginWithRedirect: (...p) => auth0Client.loginWithRedirect(...p),\n        getTokenSilently: (...p) => auth0Client.getTokenSilently(...p),\n        getTokenWithPopup: (...p) => auth0Client.getTokenWithPopup(...p),\n        logout: (...p) => auth0Client.logout(...p)\n      }}\n    >\n      {children}\n    </Auth0Context.Provider>\n  );\n};\n","import React, { useState } from \"react\";\nimport { NavLink as RouterNavLink } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nimport {\n  Collapse,\n  Container,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  NavLink,\n  Button,\n  UncontrolledDropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem\n} from \"reactstrap\";\n\nimport { useAuth0 } from \"../auth0\";\n\nconst NavBar = () => {\n  const [isOpen, setIsOpen] = useState(false);\n  const { user, isAuthenticated, loginWithRedirect, logout } = useAuth0();\n  const toggle = () => setIsOpen(!isOpen);\n\n  const logoutWithRedirect = () =>\n    logout({\n      returnTo: window.location.origin\n    });\n\n  return (\n    <div className=\"nav-container\">\n      <Navbar className=\"navbar-custom\" color=\"light\" light expand=\"md\">\n        <Container>\n          <NavbarBrand className=\"logo\" />\n          <NavbarToggler onClick={toggle} />\n          <Collapse isOpen={isOpen} navbar>\n            <Nav className=\"mr-auto\" navbar>\n            {!isAuthenticated && (\n                <NavItem>\n                  <NavLink\n                    tag={RouterNavLink}\n                    to=\"/\"\n                    exact\n                    activeClassName=\"router-link-exact-active\"\n                  >\n                    Home\n                    </NavLink>\n                </NavItem>\n              )}\n              {isAuthenticated && (\n                <NavItem>\n                  <NavLink\n                    tag={RouterNavLink}\n                    to=\"/\"\n                    exact\n                    activeClassName=\"router-link-exact-active\"\n                  >\n                    Expense Tracker\n                    </NavLink>\n                </NavItem>\n              )}\n              {isAuthenticated && (\n                <NavItem>\n                  <NavLink\n                    tag={RouterNavLink}\n                    to=\"/\"\n                    exact\n                    activeClassName=\"router-link-exact-active\"\n                  >\n                    Reports\n                    </NavLink>\n                </NavItem>\n              )}\n              {isAuthenticated && (\n                <NavItem>\n                  <NavLink\n                    tag={RouterNavLink}\n                    to=\"/\"\n                    exact\n                    activeClassName=\"router-link-exact-active\"\n                  >\n                    Alerts\n                    </NavLink>\n                </NavItem>\n              )}\n            </Nav>\n            <Nav className=\"d-none d-md-block\" navbar>\n              {!isAuthenticated && (\n                <NavItem>\n                  <Button\n                    id=\"qsLoginBtn\"\n                    color=\"primary\"\n                    className=\"btn-margin\"\n                    onClick={() => loginWithRedirect({})}\n                  >\n                    Log in\n                  </Button>\n                </NavItem>\n              )}\n              {isAuthenticated && (\n                <UncontrolledDropdown nav inNavbar>\n                  <DropdownToggle nav caret id=\"profileDropDown\">\n                    <img\n                      src={user.picture}\n                      alt=\"Profile\"\n                      className=\"nav-user-profile rounded-circle\"\n                      width=\"50\"\n                    />\n                  </DropdownToggle>\n                  <DropdownMenu>\n                    <DropdownItem header>{user.name}</DropdownItem>\n                    <DropdownItem\n                      id=\"qsLogoutBtn\"\n                      onClick={() => logoutWithRedirect()}\n                    >\n                      <FontAwesomeIcon icon=\"power-off\" className=\"mr-3\" /> Log\n                      out\n                    </DropdownItem>\n                  </DropdownMenu>\n                </UncontrolledDropdown>\n              )}\n            </Nav>\n            {!isAuthenticated && (\n              <Nav className=\"d-md-none\" navbar>\n                <NavItem>\n                  <Button\n                    id=\"qsLoginBtn\"\n                    color=\"primary\"\n                    block\n                    onClick={() => loginWithRedirect({})}\n                  >\n                    Log in\n                  </Button>\n                </NavItem>\n              </Nav>\n            )}\n            {isAuthenticated && (\n              <Nav\n                className=\"d-md-none justify-content-between\"\n                navbar\n                style={{ minHeight: 170 }}\n              >\n                <NavItem>\n                  <FontAwesomeIcon icon=\"power-off\" className=\"mr-3\" />\n                  <RouterNavLink\n                    to=\"#\"\n                    id=\"qsLogoutBtn\"\n                    onClick={() => logoutWithRedirect()}\n                  >\n                    Log out\n                  </RouterNavLink>\n                </NavItem>\n              </Nav>\n            )}\n          </Collapse>\n        </Container>\n      </Navbar>\n    </div>\n  );\n};\n\nexport default NavBar;\n","import React from \"react\";\n\nconst Footer = () => (\n  <footer className=\"bg-light p-3 text-center\">\n\n  </footer>\n);\n\nexport default Footer;\n","import React from \"react\";\n\nimport logo from \"../assets/logo.svg\";\nimport image1 from \"../assets/Image1.svg\";\n\nconst Description = () => (\n  <div className=\"text-center hero my-5\">\n    <img className=\"mb-3 app-logo\" src={logo} alt=\"logo\" width=\"120\" />\n    <h1 className=\"mb-4\">Expense Tracker</h1>\n    <p className=\"lead\">\n    Creating a simple interface you can use to add your expenses.\n    Generating monthly reports based on your inputs.\n    </p>\n    <img className=\"image\" src={image1} alt=\"image1\" width=\"600\" opacity=\"0.6\" />\n  </div>\n);\n\nexport default Description;\n","import React, { Component } from \"react\";\n\n\n\nclass ExpenseTracker extends Component {\n  render() {\n    return (\n      <div >\n      </div>\n    );\n  }\n}\n\nexport default ExpenseTracker;\n","import React from 'react'\r\n\r\nexport const Balance = () => {\r\n    return (\r\n        <div className=\"container12\">\r\n            <h4 className=\"h42\">Your Balance</h4>\r\n            <h1 id=\"balance\" className=\"h12\">$0.00</h1>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport const IncomeExpenses = () => {\r\n    return (\r\n        <div class=\"inc-exp-container\">\r\n            <div>\r\n                <h4 className =\"h42\">Income</h4>\r\n                <p id=\"money-plus\" className=\"money plus\">+$0.00</p>\r\n            </div>\r\n            <div>\r\n                <h4 className =\"h42\">Expense</h4>\r\n                <p id=\"money-minus\" className=\"money minus\">-$0.00</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport const HistoryList = () => {\r\n    return (\r\n        <div>\r\n            <div className=\"history-container\">\r\n                <h3 className=\"h32\">History</h3>\r\n            </div>\r\n            <div className=\"history-container-list\">\r\n            <ul id=\"list\" class=\"list\">\r\n                <li class=\"minus\">\r\n                    Cash <span>-$400</span><button className=\"delete-btn\">x</button>\r\n                </li>\r\n            </ul>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, {useState} from 'react'\r\n\r\nexport const NewTransaction = () => {\r\n    const [text, setText] = useState('');\r\n    const [amount, setAmount] = useState(0);\r\n    return (\r\n        <div>\r\n        <div className=\"transaction-header-container\">\r\n            <h3 className=\"h32\">Add new transaction</h3>\r\n        </div>\r\n            <div className=\"transaction-container\">\r\n            <form>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"text\">Text</label>\r\n                    <input type=\"text\" value={text} onChange={(e)=> setText(e.target.value)} placeholder=\"Enter text ..\"></input>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"amount\">Amount <br/>(negative-expense, positive-income)</label>\r\n                    <input type=\"number\" value={amount} onChange={(e)=> setAmount(e.target.value)} placeholder=\"Enter amount ..\"></input>\r\n                </div>\r\n                <button className=\"btn1\">Add transaction</button>\r\n            </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","export default (state,action) =>{\r\n    switch(action.type) {\r\n        default:\r\n            return state\r\n    }\r\n}","import React, {createContext, useReducer} from 'react';\r\nimport AppReducer from './AppReducer';\r\n\r\n//initial state\r\nconst initialState ={\r\n    transactions:[\r\n        {id:1, text: 'flower', amount: -40},\r\n        {id:2, text: 'salary', amount: -200},\r\n        {id:3, text: 'book', amount: -2000},\r\n        {id:4, text: 'camera', amount: -10},\r\n        {id:5, text: 'stuff', amount: -30},\r\n    ]\r\n}\r\n\r\n//create context\r\nexport const GlobalState = createContext(initialState);\r\n\r\n//provider component\r\nexport const GlobalProvider = ({children}) => {\r\n    const [state,dispath] = useReducer(AppReducer,initialState);\r\n\r\n    return (<GlobalProvider.Provider value={{\r\n        transactions: state.transactions\r\n    }}>\r\n    {children}\r\n    </GlobalProvider.Provider>);\r\n}\r\n","import React, { Fragment } from \"react\";\n\nimport Hero from \"../components/Description\";\nimport ExpenseTracker from \"../components/ExpenseTracker\";\nimport {Balance} from \"../components/Balance\";\nimport {IncomeExpenses} from \"../components/IncomeExpenses\";\nimport {HistoryList} from \"../components/HistoryList\"\nimport {NewTransaction} from \"../components/NewTransaction\";\nimport {GlobalProvider} from '../context/GlobalState';\n\nconst Home = () => (\n    <Fragment>\n      <GlobalProvider>\n      <Hero />\n      <hr />\n      <div className=\"ContainerTracker\">\n      <ExpenseTracker />\n      <Balance/>\n      <IncomeExpenses/>\n      <HistoryList/>\n      <NewTransaction/>\n      </div>\n      </GlobalProvider>\n    </Fragment>\n);\n\nexport default Home;\n","import { createBrowserHistory } from \"history\";\nexport default createBrowserHistory();","import { library } from \"@fortawesome/fontawesome-svg-core\";\nimport { faLink, faPowerOff, faUser } from \"@fortawesome/free-solid-svg-icons\";\n\nfunction initFontAwesome() {\n  library.add(faLink);\n  library.add(faUser);\n  library.add(faPowerOff);\n}\n\nexport default initFontAwesome;\n","import React from \"react\";\nimport { Router, Route, Switch } from \"react-router-dom\";\nimport { Container } from \"reactstrap\";\n\nimport Loading from \"./components/Loading\";\nimport NavBar from \"./components/NavBar\";\nimport Footer from \"./components/Footer\";\nimport Home from \"./views/Home\";\nimport { useAuth0 } from \"./auth0\";\nimport history from \"./utils/history\";\n\n// styles\nimport \"./App.css\";\n\n// fontawesome\nimport initFontAwesome from \"./utils/initFontAwesome\";\ninitFontAwesome();\n\nconst App = () => {\n  const { loading } = useAuth0();\n\n  if (loading) {\n    return <Loading />;\n  }\n\n  return (\n    <Router history={history}>\n      <div id=\"app\" className=\"d-flex flex-column h-100\">\n        <NavBar />\n        <Container className=\"flex-grow-1 mt-5\">\n          <Switch>\n            <Route path=\"/\" exact component={Home} />\n\n          </Switch>\n        </Container>\n        <Footer />\n      </div>\n    </Router>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Auth0Provider } from \"./auth0\";\nimport config from \"./auth_config.json\";\nimport history from \"./utils/history\";\n\nconst onRedirectCallback = appState => {\n  history.push(\n    appState && appState.targetUrl\n      ? appState.targetUrl\n      : window.location.pathname\n  );\n};\n\nReactDOM.render(\n  <Auth0Provider\n    domain={config.domain}\n    client_id={config.clientId}\n    redirect_uri={window.location.origin}\n    onRedirectCallback={onRedirectCallback}\n  >\n    <App />\n  </Auth0Provider>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}