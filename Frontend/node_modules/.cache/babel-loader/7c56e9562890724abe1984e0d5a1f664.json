{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jose-PC\\\\OneDrive\\\\Documents\\\\Projects\\\\ExpenseTrackerReact\\\\Frontend\\\\src\\\\context\\\\GlobalState.js\";\nimport React, { createContext, useReducer } from 'react';\nimport axios from 'axios';\nimport AppReducer from './AppReducer'; // Initial state\n\nconst initialState = {\n  transactions: [],\n  error: null,\n  loading: true\n}; // Create context\n\nexport const GlobalContext = createContext(initialState); // Provider component\n\nexport const GlobalProvider = ({\n  children\n}) => {\n  const [state, dispatch] = useReducer(AppReducer, initialState); // Actions\n\n  async function getTransactions() {\n    try {\n      const res = await axios.get('/api/v1/transactions');\n      dispatch({\n        type: 'GET_TRANSACTIONS',\n        payload: res.data.data\n      });\n    } catch (e) {\n      dispatch({\n        type: 'TRANSACTION_ERROR',\n        payload: e.response.data.error\n      });\n    }\n  }\n\n  async function deleteTransaction(id) {\n    try {\n      await axios.delete(`/api/v1/transactions/${id}`);\n    } catch (e) {\n      dispatch({\n        type: 'TRANSACTION_ERROR',\n        payload: e.response.data.error\n      });\n    }\n\n    dispatch({\n      type: 'DELETE_TRANSACTION',\n      payload: id\n    });\n  }\n\n  function addTransaction(transaction) {\n    dispatch({\n      type: 'ADD_TRANSACTION',\n      payload: transaction\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(GlobalContext.Provider, {\n    value: {\n      transactions: state.transactions,\n      error: state.error,\n      loading: state.loading,\n      getTransactions,\n      deleteTransaction,\n      addTransaction\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }, children);\n};","map":{"version":3,"sources":["C:/Users/Jose-PC/OneDrive/Documents/Projects/ExpenseTrackerReact/Frontend/src/context/GlobalState.js"],"names":["React","createContext","useReducer","axios","AppReducer","initialState","transactions","error","loading","GlobalContext","GlobalProvider","children","state","dispatch","getTransactions","res","get","type","payload","data","e","response","deleteTransaction","id","delete","addTransaction","transaction"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,QAAiD,OAAjD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,cAAvB,C,CAEA;;AACA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,YAAY,EAAE,EADK;AAEnBC,EAAAA,KAAK,EAAE,IAFY;AAGnBC,EAAAA,OAAO,EAAE;AAHU,CAArB,C,CAMA;;AACA,OAAO,MAAMC,aAAa,GAAGR,aAAa,CAACI,YAAD,CAAnC,C,CAEP;;AACA,OAAO,MAAMK,cAAc,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAC9C,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBX,UAAU,CAACE,UAAD,EAAaC,YAAb,CAApC,CAD8C,CAG9C;;AAEA,iBAAeS,eAAf,GAAiC;AAC/B,QAAI;AACH,YAAMC,GAAG,GAAG,MAAMZ,KAAK,CAACa,GAAN,CAAU,sBAAV,CAAlB;AAEAH,MAAAA,QAAQ,CAAC;AACPI,QAAAA,IAAI,EAAE,kBADC;AAEPC,QAAAA,OAAO,EAAEH,GAAG,CAACI,IAAJ,CAASA;AAFX,OAAD,CAAR;AAIA,KAPD,CAOE,OAAOC,CAAP,EAAU;AACVP,MAAAA,QAAQ,CAAC;AACPI,QAAAA,IAAI,EAAE,mBADC;AAEPC,QAAAA,OAAO,EAAEE,CAAC,CAACC,QAAF,CAAWF,IAAX,CAAgBZ;AAFlB,OAAD,CAAR;AAID;AACF;;AAED,iBAAee,iBAAf,CAAiCC,EAAjC,EAAqC;AACnC,QAAI;AACF,YAAMpB,KAAK,CAACqB,MAAN,CAAc,wBAAuBD,EAAG,EAAxC,CAAN;AACD,KAFD,CAEE,OAAOH,CAAP,EAAU;AACVP,MAAAA,QAAQ,CAAC;AACPI,QAAAA,IAAI,EAAE,mBADC;AAEPC,QAAAA,OAAO,EAAEE,CAAC,CAACC,QAAF,CAAWF,IAAX,CAAgBZ;AAFlB,OAAD,CAAR;AAID;;AACDM,IAAAA,QAAQ,CAAC;AACPI,MAAAA,IAAI,EAAE,oBADC;AAEPC,MAAAA,OAAO,EAAEK;AAFF,KAAD,CAAR;AAID;;AAED,WAASE,cAAT,CAAwBC,WAAxB,EAAqC;AACnCb,IAAAA,QAAQ,CAAC;AACPI,MAAAA,IAAI,EAAE,iBADC;AAEPC,MAAAA,OAAO,EAAEQ;AAFF,KAAD,CAAR;AAID;;AAED,sBAAQ,oBAAC,aAAD,CAAe,QAAf;AAAwB,IAAA,KAAK,EAAE;AACrCpB,MAAAA,YAAY,EAAEM,KAAK,CAACN,YADiB;AAErCC,MAAAA,KAAK,EAAEK,KAAK,CAACL,KAFwB;AAGrCC,MAAAA,OAAO,EAAEI,KAAK,CAACJ,OAHsB;AAIrCM,MAAAA,eAJqC;AAKrCQ,MAAAA,iBALqC;AAMrCG,MAAAA;AANqC,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQLd,QARK,CAAR;AAUD,CArDM","sourcesContent":["import React, { createContext, useReducer } from 'react';\r\nimport axios from 'axios';\r\nimport AppReducer from './AppReducer';\r\n\r\n// Initial state\r\nconst initialState = {\r\n  transactions: [],\r\n  error: null,\r\n  loading: true\r\n}\r\n\r\n// Create context\r\nexport const GlobalContext = createContext(initialState);\r\n\r\n// Provider component\r\nexport const GlobalProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(AppReducer, initialState);\r\n\r\n  // Actions\r\n\r\n  async function getTransactions() {\r\n    try {\r\n     const res = await axios.get('/api/v1/transactions');\r\n     \r\n     dispatch({\r\n       type: 'GET_TRANSACTIONS',\r\n       payload: res.data.data\r\n     });\r\n    } catch (e) {\r\n      dispatch({\r\n        type: 'TRANSACTION_ERROR',\r\n        payload: e.response.data.error\r\n      });\r\n    }\r\n  }\r\n\r\n  async function deleteTransaction(id) {\r\n    try {\r\n      await axios.delete(`/api/v1/transactions/${id}`);\r\n    } catch (e) {\r\n      dispatch({\r\n        type: 'TRANSACTION_ERROR',\r\n        payload: e.response.data.error\r\n      });\r\n    }\r\n    dispatch({\r\n      type: 'DELETE_TRANSACTION',\r\n      payload: id\r\n    });\r\n  }\r\n\r\n  function addTransaction(transaction) {\r\n    dispatch({\r\n      type: 'ADD_TRANSACTION',\r\n      payload: transaction\r\n    });\r\n  }\r\n\r\n  return (<GlobalContext.Provider value={{\r\n    transactions: state.transactions,\r\n    error: state.error,\r\n    loading: state.loading,\r\n    getTransactions,\r\n    deleteTransaction,\r\n    addTransaction\r\n  }}>\r\n    {children}\r\n  </GlobalContext.Provider>);\r\n}"]},"metadata":{},"sourceType":"module"}